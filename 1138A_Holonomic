#pragma config(Sensor, in1,    gyro,           sensorGyro)
#pragma config(Motor,  port1,            ,             tmotorVex393_HBridge, openLoop)
#pragma config(Motor,  port2,           leftBackMotor, tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port3,           rightBackMotor, tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port4,           leftFrontMotor, tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,           rightFrontMotor, tmotorVex393_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

float joy1X = vexRT[Ch4];
float joy1Y = vexRT[Ch3];
float joy2X = vexRT[Ch1];
float joy2Y = vexRT[Ch2];
float angle = 0;
float radius = 0;
float targetAngle = 0;
float turn = 0;

task main()
{

	while(true)
	{
		//This updates the variables, which are set to the remote's joystick channels
		joy1X = vexRT[Ch4];
		joy1Y = vexRT[Ch3];
		joy2X = vexRT[Ch1];
		joy2Y = vexRT[Ch2];

		//This gets the angle that the joystick is at
		angle = atan2(-1 * joy1Y, joy1X) * 180 / PI;

		//This gets how far from the center the joystick is positioned
		radius = sqrt((joy1X * joy1X) + (joy1Y * joy1Y));

		//Turning stuff
		/*targetAngle += joy2X / 2;
		if(targetAngle > SensorValue(gyro) + 3)
			turn = -1 * abs(joy2X / 2);
	  else if(targetAngle < SensorValue(gyro) - 3)
	  	turn = abs(joy2X / 2);*/

	  //This moves the motors
		motor[rightFrontMotor] = -1 * radius * sinDegrees(angle + 45) + joy2X;//turn;
		motor[rightBackMotor] = -1 * radius * cosDegrees(angle + 45) - joy2X;//turn;
		motor[leftFrontMotor] = -1 * radius * cosDegrees(angle + 45) + joy2X;//turn;
		motor[leftBackMotor] = -1 * radius * sinDegrees(angle + 45) - joy2X;//turn;
		//'radius * sinDegrees(angle)' is equal to joy1Y, but without the '+ 45', one of the corners would be the front of
		//the robot. The '+ 45' gives the joystick a 45 degree offset, which makes one of the sides of the robot the front
		//Similarly, 'radius * cosDegrees(angle)' is equal to joy1X, and the '+ 45' is added for the same reason as above.
	}

}
