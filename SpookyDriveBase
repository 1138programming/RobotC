#pragma config(Motor,  port1,           backLeft,      tmotorVex393_HBridge, openLoop, reversed)
#pragma config(Motor,  port2,           frontLeft,     tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port3,           liftLeft1,    tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port4,           collectorLeft, tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port5,           liftLeft2,  tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port6,           liftRight1,   tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port7,           collectorRight, tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port8,           liftRight2, tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port9,           frontRight,    tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port10,          backRight,     tmotorVex393_HBridge, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

task main()
{
	while(true)
	{
		motor[backLeft] = (vexRT[Ch3]);
		motor[backRight] = (vexRT[Ch3]);
		motor[frontLeft] = (vexRT[Ch3]);
		motor[frontRight] = (vexRT[Ch3]);
		motor[backLeft] = -(vexRT[Ch1]);
		motor[frontLeft] = -(vexRT[Ch1]);
		motor[backRight] = (vexRT[Ch1]);
		motor[frontRight] = (vexRT[Ch1]);
		motor[liftLeft1] = -(vexRT[Ch3Xmtr2]);
		motor[liftRight1] = -(vexRT[Ch3Xmtr2]);
		motor[liftLeft2] = -(vexRT[Ch3Xmtr2]);
		motor[liftRight2] = -(vexRT[Ch3Xmtr2]);
		motor[collectorLeft] = -(vexRT[Ch2Xmtr2]);
		motor[collectorRight] = -(vexRT[Ch2Xmtr2]);
	}
}
